$background: rgb(202, 202, 202);
$header: rgba(26, 35, 158, 0.164);

* {
  margin:0;
  padding: 0;
  box-sizing: border-box;
  background-color: $background;

}


body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// code {
//   font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
//     monospace;
// }



/* MAIN CONTAINER */
.mainContainer {
  color: black;
  display: grid;
}

/* LANDING PAGE */
.landingPage {
  display: grid;
  grid-template:
  1fr
  1fr
  1fr
  1fr
  1fr/ 1fr 30vw 1fr 30vw 1fr;
  grid-template-areas:
  '. header header header .'
  '. instru instru instru .'
  '. SInstr .....  CInstr .'
  '. static ..... component .'
  '. ...... next   ......  . ';
  place-items: center;
  grid-row-gap: 3vh;
  margin: 5%;
  margin-bottom: 100px;

  .header {
    display: grid;
    color: $header;
    grid-area: header;

    h1{
      font-size: 100px;
    }

  }
  .instructions {
    display: grid;
    grid-area: instru;
    place-items: center;
  }

  .staticInstr {
    display: grid;
    grid-area: SInstr;
    place-items: center;
  }

  .staticFiles {
    display: grid;
    grid-area: static;
    place-items: center;
  }

  .componentInstr{
    display: grid;
    grid-area: CInstr;
    place-items: center;
}
  .componentFiles {
    display: grid;
    grid-area: component;
    place-items: center;
  }

  .next {
    display: grid;
    grid-area: next;
    place-items: center;
  }

}



/* RENDERED PAGE */
.renderedPage {
  display: grid;
  grid-template-columns: 45% 55%;
}

.renderedPage header {
  grid-column: 1 / span 2;
  border: 2px solid black;
}

/* COMPONENT TREE */
.componentTree {
  grid-column: 1 / span 1;
  min-height: 700px;
  border: 2px solid blue;
}

.node {
  color: black;
}

/* VISUALIZER */
.visualizer {
  grid-column: 2 / span 1;
  border: 2px solid red;
}

/* STATE CONTAINER */
.stateContainer {
  color: red;
}

/* STATE ITEM */
.stateItem {
  color: black;
}

/* RENDERED CONTAINER */
.renderedContainer {
  color: red;
}

/* REACT COMPONENT RENDERED */
.reactComponent {
  color: black;
}

iframe {
  border: 1px solid black;
  width: 100%;
  height: 500px;
}
